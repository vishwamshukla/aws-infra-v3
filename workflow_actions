---

name: AWS AMI using Packer Config

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Packer Init
        run: packer init webapp.pkr.hcl
      - name: Validate Packer template
        run: packer validate webapp.pkr.hcl
        continue-on-error: true
      - name: Upload validation status
        uses: actions/upload-artifact@v2
        with:
          name: validation-status
          path: validation-status.txt
      - name: Fail if validation failed
        run: |
          if [ -f validation-status.txt ] && grep -q "syntax error" validation-status.txt; then
            echo "Packer template validation failed"
            exit 1
          fi
  build:
    needs: validate
    if: github.event.action == 'closed' && github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build application artifact
        run: |
          # Commands to build application artifact go here
          # For example, if you're using Maven:
          mvn package
      - name: Build AMI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: packer build -var "aws_account_id=${{ secrets.AWS_ACCOUNT_ID }}" packer-template.json
        if: success()
      - name: Share AMI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws ec2 modify-image-attribute --image-id ${{ steps.build.outputs.ami_id }} --launch-permission "Add=[{UserId=${{ secrets.DEMO_ACCOUNT_ID }}}]"
      - name: Upload AMI ID
        id: build
        uses: actions/upload-artifact@v2
        with:
          name: ami-id
          path: ami-id.txt
